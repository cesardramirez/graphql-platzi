# Valida los tipos de nivel para un curso.
enum Level {
  principiante
  intermedio
  avanzado
}

type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
  level: Level
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {  # Documentación del Query.
  "Devuelve todos los cursos."
  courses: [Course]
  "Devuelve un sólo curso."
  course(id: ID!): Course
  "Devuelve todos los estudiantes."
  students: [Student]
  "Devuelve un estudiante."
  student(id: ID!): Student
}

# Inputs para los Mutation.
input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
  level: Level
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input StudentEditInput {
  name: String
  email: String
}

type Mutation {  # Documentación del Mutation.
  "Crea un curso."
  createCourse(input: CourseInput!): Course
  "Editar un curso."
  editCourse(id: ID!, input: CourseEditInput): Course
  "Elimina un curso."
  deleteCourse(id: ID!): Boolean
  "Crea un estudiante."
  createStudent(input: StudentInput!): Student
  "Editar un estudiante."
  editStudent(id: ID!, input: StudentEditInput): Student
  "Elimina un estudiante."
  deleteStudent(id: ID!): Boolean
  "Agrega una persona a un curso."
  addPeople(courseID: ID!, personID: ID!): Course
}
